plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'io.qameta.allure' version '2.12.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    allureVersion = '2.25.0'
    junitVersion = '5.11.3'
    aspectJVersion = '1.9.22.1'
}

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

sourceCompatibility = '22'
targetCompatibility = '19'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = '19'
    }
}

dependencies {
    implementation('org.seleniumhq.selenium:selenium-java:4.20.0')
    implementation('org.slf4j:slf4j-simple:2.0.13')
    implementation("com.github.javafaker:javafaker:1.0.2")


    implementation("io.github.bonigarcia:webdrivermanager:5.9.2")

    implementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation("io.qameta.allure:allure-junit5:$allureVersion")

    agent "org.aspectj:aspectjweaver:$aspectJVersion"

}

allure {
    autoconfigure = true
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}

test {
    useJUnitPlatform()
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
}